// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package app

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Creates an SWA Application.
// 
// This resource allows you to create and configure an SWA Application.
//
// > This content is derived from https://github.com/articulate/terraform-provider-okta/blob/master/website/docs/r/app_swa.html.markdown.
type Swa struct {
	s *pulumi.ResourceState
}

// NewSwa registers a new resource with the given unique name, arguments, and options.
func NewSwa(ctx *pulumi.Context,
	name string, args *SwaArgs, opts ...pulumi.ResourceOpt) (*Swa, error) {
	if args == nil || args.Label == nil {
		return nil, errors.New("missing required argument 'Label'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accessibilityErrorRedirectUrl"] = nil
		inputs["accessibilitySelfService"] = nil
		inputs["autoSubmitToolbar"] = nil
		inputs["buttonField"] = nil
		inputs["groups"] = nil
		inputs["hideIos"] = nil
		inputs["hideWeb"] = nil
		inputs["label"] = nil
		inputs["passwordField"] = nil
		inputs["preconfiguredApp"] = nil
		inputs["status"] = nil
		inputs["url"] = nil
		inputs["urlRegex"] = nil
		inputs["usernameField"] = nil
		inputs["users"] = nil
	} else {
		inputs["accessibilityErrorRedirectUrl"] = args.AccessibilityErrorRedirectUrl
		inputs["accessibilitySelfService"] = args.AccessibilitySelfService
		inputs["autoSubmitToolbar"] = args.AutoSubmitToolbar
		inputs["buttonField"] = args.ButtonField
		inputs["groups"] = args.Groups
		inputs["hideIos"] = args.HideIos
		inputs["hideWeb"] = args.HideWeb
		inputs["label"] = args.Label
		inputs["passwordField"] = args.PasswordField
		inputs["preconfiguredApp"] = args.PreconfiguredApp
		inputs["status"] = args.Status
		inputs["url"] = args.Url
		inputs["urlRegex"] = args.UrlRegex
		inputs["usernameField"] = args.UsernameField
		inputs["users"] = args.Users
	}
	inputs["name"] = nil
	inputs["signOnMode"] = nil
	inputs["userNameTemplate"] = nil
	inputs["userNameTemplateType"] = nil
	s, err := ctx.RegisterResource("okta:app/swa:Swa", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Swa{s: s}, nil
}

// GetSwa gets an existing Swa resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwa(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SwaState, opts ...pulumi.ResourceOpt) (*Swa, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accessibilityErrorRedirectUrl"] = state.AccessibilityErrorRedirectUrl
		inputs["accessibilitySelfService"] = state.AccessibilitySelfService
		inputs["autoSubmitToolbar"] = state.AutoSubmitToolbar
		inputs["buttonField"] = state.ButtonField
		inputs["groups"] = state.Groups
		inputs["hideIos"] = state.HideIos
		inputs["hideWeb"] = state.HideWeb
		inputs["label"] = state.Label
		inputs["name"] = state.Name
		inputs["passwordField"] = state.PasswordField
		inputs["preconfiguredApp"] = state.PreconfiguredApp
		inputs["signOnMode"] = state.SignOnMode
		inputs["status"] = state.Status
		inputs["url"] = state.Url
		inputs["urlRegex"] = state.UrlRegex
		inputs["userNameTemplate"] = state.UserNameTemplate
		inputs["userNameTemplateType"] = state.UserNameTemplateType
		inputs["usernameField"] = state.UsernameField
		inputs["users"] = state.Users
	}
	s, err := ctx.ReadResource("okta:app/swa:Swa", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Swa{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Swa) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Swa) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Custom error page URL.
func (r *Swa) AccessibilityErrorRedirectUrl() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["accessibilityErrorRedirectUrl"])
}

// Enable self service. By default it is `false`.
func (r *Swa) AccessibilitySelfService() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["accessibilitySelfService"])
}

// Display auto submit toolbar.
func (r *Swa) AutoSubmitToolbar() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["autoSubmitToolbar"])
}

// Login button field.
func (r *Swa) ButtonField() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["buttonField"])
}

// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
func (r *Swa) Groups() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["groups"])
}

// Do not display application icon on mobile app.
func (r *Swa) HideIos() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["hideIos"])
}

// Do not display application icon to users.
func (r *Swa) HideWeb() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["hideWeb"])
}

// The display name of the Application.
func (r *Swa) Label() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["label"])
}

// Name assigned to the application by Okta.
func (r *Swa) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Login password field.
func (r *Swa) PasswordField() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["passwordField"])
}

// name of application from the Okta Integration Network, if not included a custom app will be created.
func (r *Swa) PreconfiguredApp() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["preconfiguredApp"])
}

// Sign on mode of application.
func (r *Swa) SignOnMode() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["signOnMode"])
}

// Status of application. By default it is `"ACTIVE"`.
func (r *Swa) Status() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["status"])
}

// Login URL.
func (r *Swa) Url() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["url"])
}

// A regex that further restricts URL to the specified regex.
func (r *Swa) UrlRegex() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["urlRegex"])
}

// The default username assigned to each user.
func (r *Swa) UserNameTemplate() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["userNameTemplate"])
}

// The Username template type.
func (r *Swa) UserNameTemplateType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["userNameTemplateType"])
}

// Login username field.
func (r *Swa) UsernameField() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["usernameField"])
}

// The users assigned to the application. See `app.User` for a more flexible approach.
func (r *Swa) Users() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["users"])
}

// Input properties used for looking up and filtering Swa resources.
type SwaState struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl interface{}
	// Enable self service. By default it is `false`.
	AccessibilitySelfService interface{}
	// Display auto submit toolbar.
	AutoSubmitToolbar interface{}
	// Login button field.
	ButtonField interface{}
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups interface{}
	// Do not display application icon on mobile app.
	HideIos interface{}
	// Do not display application icon to users.
	HideWeb interface{}
	// The display name of the Application.
	Label interface{}
	// Name assigned to the application by Okta.
	Name interface{}
	// Login password field.
	PasswordField interface{}
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp interface{}
	// Sign on mode of application.
	SignOnMode interface{}
	// Status of application. By default it is `"ACTIVE"`.
	Status interface{}
	// Login URL.
	Url interface{}
	// A regex that further restricts URL to the specified regex.
	UrlRegex interface{}
	// The default username assigned to each user.
	UserNameTemplate interface{}
	// The Username template type.
	UserNameTemplateType interface{}
	// Login username field.
	UsernameField interface{}
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users interface{}
}

// The set of arguments for constructing a Swa resource.
type SwaArgs struct {
	// Custom error page URL.
	AccessibilityErrorRedirectUrl interface{}
	// Enable self service. By default it is `false`.
	AccessibilitySelfService interface{}
	// Display auto submit toolbar.
	AutoSubmitToolbar interface{}
	// Login button field.
	ButtonField interface{}
	// Groups associated with the application. See `app.GroupAssignment` for a more flexible approach.
	Groups interface{}
	// Do not display application icon on mobile app.
	HideIos interface{}
	// Do not display application icon to users.
	HideWeb interface{}
	// The display name of the Application.
	Label interface{}
	// Login password field.
	PasswordField interface{}
	// name of application from the Okta Integration Network, if not included a custom app will be created.
	PreconfiguredApp interface{}
	// Status of application. By default it is `"ACTIVE"`.
	Status interface{}
	// Login URL.
	Url interface{}
	// A regex that further restricts URL to the specified regex.
	UrlRegex interface{}
	// Login username field.
	UsernameField interface{}
	// The users assigned to the application. See `app.User` for a more flexible approach.
	Users interface{}
}
