// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package template

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Creates an Okta Email Template.
// 
// This resource allows you to create and configure an Okta Email Template.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-okta/blob/master/website/docs/r/template_email.html.markdown.
type Email struct {
	s *pulumi.ResourceState
}

// NewEmail registers a new resource with the given unique name, arguments, and options.
func NewEmail(ctx *pulumi.Context,
	name string, args *EmailArgs, opts ...pulumi.ResourceOpt) (*Email, error) {
	if args == nil || args.Translations == nil {
		return nil, errors.New("missing required argument 'Translations'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["defaultLanguage"] = nil
		inputs["translations"] = nil
		inputs["type"] = nil
	} else {
		inputs["defaultLanguage"] = args.DefaultLanguage
		inputs["translations"] = args.Translations
		inputs["type"] = args.Type
	}
	s, err := ctx.RegisterResource("okta:template/email:Email", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Email{s: s}, nil
}

// GetEmail gets an existing Email resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmail(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EmailState, opts ...pulumi.ResourceOpt) (*Email, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["defaultLanguage"] = state.DefaultLanguage
		inputs["translations"] = state.Translations
		inputs["type"] = state.Type
	}
	s, err := ctx.ReadResource("okta:template/email:Email", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Email{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Email) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Email) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The default language, by default is set to `"en"`.
func (r *Email) DefaultLanguage() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["defaultLanguage"])
}

// Set of translations for particular template.
func (r *Email) Translations() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["translations"])
}

// Email template type
func (r *Email) Type() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["type"])
}

// Input properties used for looking up and filtering Email resources.
type EmailState struct {
	// The default language, by default is set to `"en"`.
	DefaultLanguage interface{}
	// Set of translations for particular template.
	Translations interface{}
	// Email template type
	Type interface{}
}

// The set of arguments for constructing a Email resource.
type EmailArgs struct {
	// The default language, by default is set to `"en"`.
	DefaultLanguage interface{}
	// Set of translations for particular template.
	Translations interface{}
	// Email template type
	Type interface{}
}
