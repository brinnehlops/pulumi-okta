// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package user

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Creates an Okta User.
// 
// This resource allows you to create and configure an Okta User.
//
// > This content is derived from https://github.com/articulate/terraform-provider-okta/blob/master/website/docs/r/user.html.markdown.
type User struct {
	s *pulumi.ResourceState
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOpt) (*User, error) {
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	if args == nil || args.FirstName == nil {
		return nil, errors.New("missing required argument 'FirstName'")
	}
	if args == nil || args.LastName == nil {
		return nil, errors.New("missing required argument 'LastName'")
	}
	if args == nil || args.Login == nil {
		return nil, errors.New("missing required argument 'Login'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["adminRoles"] = nil
		inputs["city"] = nil
		inputs["costCenter"] = nil
		inputs["countryCode"] = nil
		inputs["customProfileAttributes"] = nil
		inputs["department"] = nil
		inputs["displayName"] = nil
		inputs["division"] = nil
		inputs["email"] = nil
		inputs["employeeNumber"] = nil
		inputs["firstName"] = nil
		inputs["groupMemberships"] = nil
		inputs["honorificPrefix"] = nil
		inputs["honorificSuffix"] = nil
		inputs["lastName"] = nil
		inputs["locale"] = nil
		inputs["login"] = nil
		inputs["manager"] = nil
		inputs["managerId"] = nil
		inputs["middleName"] = nil
		inputs["mobilePhone"] = nil
		inputs["nickName"] = nil
		inputs["organization"] = nil
		inputs["password"] = nil
		inputs["postalAddress"] = nil
		inputs["preferredLanguage"] = nil
		inputs["primaryPhone"] = nil
		inputs["profileUrl"] = nil
		inputs["recoveryAnswer"] = nil
		inputs["recoveryQuestion"] = nil
		inputs["secondEmail"] = nil
		inputs["state"] = nil
		inputs["status"] = nil
		inputs["streetAddress"] = nil
		inputs["timezone"] = nil
		inputs["title"] = nil
		inputs["userType"] = nil
		inputs["zipCode"] = nil
	} else {
		inputs["adminRoles"] = args.AdminRoles
		inputs["city"] = args.City
		inputs["costCenter"] = args.CostCenter
		inputs["countryCode"] = args.CountryCode
		inputs["customProfileAttributes"] = args.CustomProfileAttributes
		inputs["department"] = args.Department
		inputs["displayName"] = args.DisplayName
		inputs["division"] = args.Division
		inputs["email"] = args.Email
		inputs["employeeNumber"] = args.EmployeeNumber
		inputs["firstName"] = args.FirstName
		inputs["groupMemberships"] = args.GroupMemberships
		inputs["honorificPrefix"] = args.HonorificPrefix
		inputs["honorificSuffix"] = args.HonorificSuffix
		inputs["lastName"] = args.LastName
		inputs["locale"] = args.Locale
		inputs["login"] = args.Login
		inputs["manager"] = args.Manager
		inputs["managerId"] = args.ManagerId
		inputs["middleName"] = args.MiddleName
		inputs["mobilePhone"] = args.MobilePhone
		inputs["nickName"] = args.NickName
		inputs["organization"] = args.Organization
		inputs["password"] = args.Password
		inputs["postalAddress"] = args.PostalAddress
		inputs["preferredLanguage"] = args.PreferredLanguage
		inputs["primaryPhone"] = args.PrimaryPhone
		inputs["profileUrl"] = args.ProfileUrl
		inputs["recoveryAnswer"] = args.RecoveryAnswer
		inputs["recoveryQuestion"] = args.RecoveryQuestion
		inputs["secondEmail"] = args.SecondEmail
		inputs["state"] = args.State
		inputs["status"] = args.Status
		inputs["streetAddress"] = args.StreetAddress
		inputs["timezone"] = args.Timezone
		inputs["title"] = args.Title
		inputs["userType"] = args.UserType
		inputs["zipCode"] = args.ZipCode
	}
	inputs["rawStatus"] = nil
	s, err := ctx.RegisterResource("okta:user/user:User", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &User{s: s}, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UserState, opts ...pulumi.ResourceOpt) (*User, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["adminRoles"] = state.AdminRoles
		inputs["city"] = state.City
		inputs["costCenter"] = state.CostCenter
		inputs["countryCode"] = state.CountryCode
		inputs["customProfileAttributes"] = state.CustomProfileAttributes
		inputs["department"] = state.Department
		inputs["displayName"] = state.DisplayName
		inputs["division"] = state.Division
		inputs["email"] = state.Email
		inputs["employeeNumber"] = state.EmployeeNumber
		inputs["firstName"] = state.FirstName
		inputs["groupMemberships"] = state.GroupMemberships
		inputs["honorificPrefix"] = state.HonorificPrefix
		inputs["honorificSuffix"] = state.HonorificSuffix
		inputs["lastName"] = state.LastName
		inputs["locale"] = state.Locale
		inputs["login"] = state.Login
		inputs["manager"] = state.Manager
		inputs["managerId"] = state.ManagerId
		inputs["middleName"] = state.MiddleName
		inputs["mobilePhone"] = state.MobilePhone
		inputs["nickName"] = state.NickName
		inputs["organization"] = state.Organization
		inputs["password"] = state.Password
		inputs["postalAddress"] = state.PostalAddress
		inputs["preferredLanguage"] = state.PreferredLanguage
		inputs["primaryPhone"] = state.PrimaryPhone
		inputs["profileUrl"] = state.ProfileUrl
		inputs["rawStatus"] = state.RawStatus
		inputs["recoveryAnswer"] = state.RecoveryAnswer
		inputs["recoveryQuestion"] = state.RecoveryQuestion
		inputs["secondEmail"] = state.SecondEmail
		inputs["state"] = state.State
		inputs["status"] = state.Status
		inputs["streetAddress"] = state.StreetAddress
		inputs["timezone"] = state.Timezone
		inputs["title"] = state.Title
		inputs["userType"] = state.UserType
		inputs["zipCode"] = state.ZipCode
	}
	s, err := ctx.ReadResource("okta:user/user:User", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &User{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *User) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *User) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Administrator roles assigned to User.
func (r *User) AdminRoles() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["adminRoles"])
}

// User profile property.
func (r *User) City() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["city"])
}

// User profile property.
func (r *User) CostCenter() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["costCenter"])
}

// User profile property.
func (r *User) CountryCode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["countryCode"])
}

// raw JSON containing all custom profile attributes.
func (r *User) CustomProfileAttributes() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["customProfileAttributes"])
}

// User profile property.
func (r *User) Department() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["department"])
}

// User profile property.
func (r *User) DisplayName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["displayName"])
}

// User profile property.
func (r *User) Division() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["division"])
}

// User profile property.
func (r *User) Email() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["email"])
}

// User profile property.
func (r *User) EmployeeNumber() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["employeeNumber"])
}

// User's First Name, required by default.
func (r *User) FirstName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["firstName"])
}

// User profile property.
func (r *User) GroupMemberships() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["groupMemberships"])
}

// User profile property.
func (r *User) HonorificPrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["honorificPrefix"])
}

// User profile property.
func (r *User) HonorificSuffix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["honorificSuffix"])
}

// User's Last Name, required by default.
func (r *User) LastName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["lastName"])
}

// User profile property.
func (r *User) Locale() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["locale"])
}

// User profile property.
func (r *User) Login() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["login"])
}

// User profile property.
func (r *User) Manager() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["manager"])
}

// User profile property.
func (r *User) ManagerId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["managerId"])
}

// User profile property.
func (r *User) MiddleName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["middleName"])
}

// User profile property.
func (r *User) MobilePhone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["mobilePhone"])
}

// User profile property.
func (r *User) NickName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nickName"])
}

// User profile property.
func (r *User) Organization() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["organization"])
}

// User password.
func (r *User) Password() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["password"])
}

// User profile property.
func (r *User) PostalAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["postalAddress"])
}

// User profile property.
func (r *User) PreferredLanguage() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["preferredLanguage"])
}

// User profile property.
func (r *User) PrimaryPhone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["primaryPhone"])
}

// User profile property.
func (r *User) ProfileUrl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["profileUrl"])
}

// The raw status of the User in Okta - (status is mapped)
func (r *User) RawStatus() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["rawStatus"])
}

// User password recovery answer.
func (r *User) RecoveryAnswer() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["recoveryAnswer"])
}

// User password recovery question.
func (r *User) RecoveryQuestion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["recoveryQuestion"])
}

// User profile property.
func (r *User) SecondEmail() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["secondEmail"])
}

// User profile property.
func (r *User) State() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["state"])
}

// User profile property.
func (r *User) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// User profile property.
func (r *User) StreetAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["streetAddress"])
}

// User profile property.
func (r *User) Timezone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["timezone"])
}

// User profile property.
func (r *User) Title() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["title"])
}

// User profile property.
func (r *User) UserType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["userType"])
}

// User profile property.
func (r *User) ZipCode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zipCode"])
}

// Input properties used for looking up and filtering User resources.
type UserState struct {
	// Administrator roles assigned to User.
	AdminRoles interface{}
	// User profile property.
	City interface{}
	// User profile property.
	CostCenter interface{}
	// User profile property.
	CountryCode interface{}
	// raw JSON containing all custom profile attributes.
	CustomProfileAttributes interface{}
	// User profile property.
	Department interface{}
	// User profile property.
	DisplayName interface{}
	// User profile property.
	Division interface{}
	// User profile property.
	Email interface{}
	// User profile property.
	EmployeeNumber interface{}
	// User's First Name, required by default.
	FirstName interface{}
	// User profile property.
	GroupMemberships interface{}
	// User profile property.
	HonorificPrefix interface{}
	// User profile property.
	HonorificSuffix interface{}
	// User's Last Name, required by default.
	LastName interface{}
	// User profile property.
	Locale interface{}
	// User profile property.
	Login interface{}
	// User profile property.
	Manager interface{}
	// User profile property.
	ManagerId interface{}
	// User profile property.
	MiddleName interface{}
	// User profile property.
	MobilePhone interface{}
	// User profile property.
	NickName interface{}
	// User profile property.
	Organization interface{}
	// User password.
	Password interface{}
	// User profile property.
	PostalAddress interface{}
	// User profile property.
	PreferredLanguage interface{}
	// User profile property.
	PrimaryPhone interface{}
	// User profile property.
	ProfileUrl interface{}
	// The raw status of the User in Okta - (status is mapped)
	RawStatus interface{}
	// User password recovery answer.
	RecoveryAnswer interface{}
	// User password recovery question.
	RecoveryQuestion interface{}
	// User profile property.
	SecondEmail interface{}
	// User profile property.
	State interface{}
	// User profile property.
	Status interface{}
	// User profile property.
	StreetAddress interface{}
	// User profile property.
	Timezone interface{}
	// User profile property.
	Title interface{}
	// User profile property.
	UserType interface{}
	// User profile property.
	ZipCode interface{}
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// Administrator roles assigned to User.
	AdminRoles interface{}
	// User profile property.
	City interface{}
	// User profile property.
	CostCenter interface{}
	// User profile property.
	CountryCode interface{}
	// raw JSON containing all custom profile attributes.
	CustomProfileAttributes interface{}
	// User profile property.
	Department interface{}
	// User profile property.
	DisplayName interface{}
	// User profile property.
	Division interface{}
	// User profile property.
	Email interface{}
	// User profile property.
	EmployeeNumber interface{}
	// User's First Name, required by default.
	FirstName interface{}
	// User profile property.
	GroupMemberships interface{}
	// User profile property.
	HonorificPrefix interface{}
	// User profile property.
	HonorificSuffix interface{}
	// User's Last Name, required by default.
	LastName interface{}
	// User profile property.
	Locale interface{}
	// User profile property.
	Login interface{}
	// User profile property.
	Manager interface{}
	// User profile property.
	ManagerId interface{}
	// User profile property.
	MiddleName interface{}
	// User profile property.
	MobilePhone interface{}
	// User profile property.
	NickName interface{}
	// User profile property.
	Organization interface{}
	// User password.
	Password interface{}
	// User profile property.
	PostalAddress interface{}
	// User profile property.
	PreferredLanguage interface{}
	// User profile property.
	PrimaryPhone interface{}
	// User profile property.
	ProfileUrl interface{}
	// User password recovery answer.
	RecoveryAnswer interface{}
	// User password recovery question.
	RecoveryQuestion interface{}
	// User profile property.
	SecondEmail interface{}
	// User profile property.
	State interface{}
	// User profile property.
	Status interface{}
	// User profile property.
	StreetAddress interface{}
	// User profile property.
	Timezone interface{}
	// User profile property.
	Title interface{}
	// User profile property.
	UserType interface{}
	// User profile property.
	ZipCode interface{}
}
